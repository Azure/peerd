apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: &name {{ include "peerd.name" . }}
  namespace: {{ include "peerd.namespace" . }}
  labels:
    {{- include "peerd.labels" . | nindent 4 }}
  {{- if .Values.peerd.metrics.prometheus.aksAutoDiscovery }}
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: '/metrics/prometheus'
      prometheus.io/port: '5004'
  {{- end }}
spec:
  selector:
    matchLabels:
      app: *name
  template:
    metadata:
      labels:
        app: *name
    spec:
      serviceAccountName: {{ include "peerd.serviceAccountName" . }}
      containers:
        - image: "{{ .Values.peerd.image.ref }}"
          imagePullPolicy: "{{ .Values.peerd.image.pullPolicy }}"
          args:
            - "--log-level={{ .Values.peerd.logLevel }}"
            - "run"
            - "--http-addr=0.0.0.0:5000"
            - "--k8s-namespace={{ .Values.peerd.namespace.k8s }}"
            - "--add-mirror-configuration={{ .Values.peerd.configureMirrors }}"
            {{- with .Values.peerd.hosts }}
            - --hosts
            {{- range . }}
            - {{ . | quote }}
            {{- end }}
            {{- end }}
  
          name: *name
          ports:
            - containerPort: 5000
              name: http
            - containerPort: 5001
              name: https
            - containerPort: 5003
              name: router
            - containerPort: 5004
              name: metrics
          volumeMounts:
            - name: metricsmount
              mountPath: "/var/log/peerdmetrics"
            - name: containerd-socket
              mountPath: /run/containerd/containerd.sock
            - name: containerd-certs
              mountPath: /etc/containerd/certs.d
      volumes:
        - name: metricsmount
          hostPath:
            path: /var/log/peerdmetrics
            type: FileOrCreate
        - name: containerd-socket
          hostPath:
            path: /run/containerd/containerd.sock
            type: Socket
        - name: containerd-certs
          hostPath:
            path: /etc/containerd/certs.d
            type: DirectoryOrCreate
      {{- with .Values.peerd.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
